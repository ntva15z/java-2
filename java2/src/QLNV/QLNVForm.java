/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package QLNV;

import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.Date;
import java.util.List;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author HOANG
 */
public class QLNVForm extends javax.swing.JFrame {
    List<NhanVien> list = new ArrayList<>();
    NhanVien NV;
    DefaultTableModel model;
    int index = 0;
    /**
     * Creates new form QLNVForm
     */
    public QLNVForm() {
        initComponents();
        setLocationRelativeTo(null);
        buttonGroup1.add(rdbNu);
        buttonGroup1.add(rdbNam);
        List<String> listcbb = new ArrayList<String>();
        cbbPhongban.removeAllItems();
        listcbb.add("Phục Vụ");
        listcbb.add("Tiếp Tân");
        listcbb.add("Đầu Bếp");
        for (String x : listcbb) {
            cbbPhongban.addItem(x);  
        }
        cbbPhongban.setSelectedIndex(0);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jProgressBar1 = new javax.swing.JProgressBar();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtMaNV = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtTenNV = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtNgaysinh = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtLuong = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        btnThem = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        btnSua = new javax.swing.JButton();
        btnTimkiem = new javax.swing.JButton();
        btnSapxep = new javax.swing.JButton();
        btnThoat = new javax.swing.JButton();
        cbbPhongban = new javax.swing.JComboBox<>();
        btnNew = new javax.swing.JButton();
        rdbNu = new javax.swing.JRadioButton();
        rdbNam = new javax.swing.JRadioButton();
        canvas1 = new java.awt.Canvas();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Thông tin nhân vien");

        jLabel2.setText("Mã nhân viên");

        jLabel3.setText("Tên nhân viên");

        jLabel4.setText("Ngày sinh");

        jLabel5.setText("Hệ số lương");

        jLabel7.setText("Phòng ban");

        jLabel6.setText("Giới tính");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Mã NV", "Tên NV", "Ngay Sinh", "Hệ số lương", "Giới Tính", "Phòng ban"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        btnThem.setText("Thêm");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        btnXoa.setText("Xoa");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        btnSua.setText("Sửa");
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });

        btnTimkiem.setText("Tìm Kiếm");
        btnTimkiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimkiemActionPerformed(evt);
            }
        });

        btnSapxep.setText("Sắp xếp theo lương");
        btnSapxep.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSapxepActionPerformed(evt);
            }
        });

        btnThoat.setText("Thoát");
        btnThoat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThoatActionPerformed(evt);
            }
        });

        cbbPhongban.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        btnNew.setText("New");
        btnNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewActionPerformed(evt);
            }
        });

        buttonGroup1.add(rdbNu);
        rdbNu.setText("Nữ");
        rdbNu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdbNuActionPerformed(evt);
            }
        });

        buttonGroup1.add(rdbNam);
        rdbNam.setText("Nam");
        rdbNam.setToolTipText("Nam");
        rdbNam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdbNamActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 605, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(35, 35, 35)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtMaNV, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtTenNV, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtNgaysinh, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7))
                        .addGap(47, 47, 47)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtLuong)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(cbbPhongban, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(152, 152, 152))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(rdbNam)
                                .addGap(18, 18, 18)
                                .addComponent(rdbNu)
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(btnNew)
                .addGap(18, 18, 18)
                .addComponent(btnThem)
                .addGap(18, 18, 18)
                .addComponent(btnXoa)
                .addGap(18, 18, 18)
                .addComponent(btnSua)
                .addGap(18, 18, 18)
                .addComponent(btnTimkiem)
                .addGap(18, 18, 18)
                .addComponent(btnSapxep)
                .addGap(18, 18, 18)
                .addComponent(btnThoat)
                .addGap(71, 71, 71))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(canvas1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(83, 83, 83))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtMaNV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(txtLuong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtTenNV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(rdbNam)
                    .addComponent(rdbNu))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtNgaysinh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(cbbPhongban, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16)
                .addComponent(canvas1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnThem)
                    .addComponent(btnXoa)
                    .addComponent(btnSua)
                    .addComponent(btnTimkiem)
                    .addComponent(btnSapxep)
                    .addComponent(btnThoat)
                    .addComponent(btnNew))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        // TODO add your handling code here:
        boolean check=true;
        double luong = 0;
        //kiểm tra mã nhân viên, mã không được trùng
        try {
            if(txtMaNV.getText().equals("")){
            JOptionPane.showMessageDialog(rootPane, "Mã nhân viên không được để rỗng");
            txtMaNV.requestFocus();
            check = false;
            return;
        }
        } catch (Exception e) {
            for (int i = 0; i < list.size(); i++) {
                  if(list.get(i).MaNV.equalsIgnoreCase(txtMaNV.getText())){
                      JOptionPane.showMessageDialog(rootPane, "Mã nhân viên đã tồn tại,mời nhập lại mã");
                      
                      txtMaNV.setText("");
                      txtMaNV.requestFocus(); 
                      check = false;
                      return;
                  }
            }
           
        }
        //kiểm tra tên nhân viên
        try {
            if(txtTenNV.getText().equals("")){
            JOptionPane.showMessageDialog(rootPane, "Tên nhân viên không được để rỗng");
            txtTenNV.requestFocus();
            check = false;
            return;
        }
        } catch (Exception e) {
        }
        //kiểm tra ngày sinh đúng định dạng dd/MM/yyyy
        try {
            if(txtNgaysinh.getText().equals("")){
            JOptionPane.showMessageDialog(rootPane, "Ngày sinh nhân viên không được để rỗng");
            txtNgaysinh.requestFocus();
            check = false;
            return;
            }
            else{
               SimpleDateFormat dateFormat = new SimpleDateFormat();          
               String strNgaysinh = txtNgaysinh.getText().trim().toString();
               dateFormat.applyPattern("dd/MM/yyyy");
               Date date= dateFormat.parse(strNgaysinh);
               dateFormat.format(date);          
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, "kiểu dữ liệu không hợp lệ");
            check = false;
            return;
        }
        //kiểm tra lương nhân viên rỗng, 
        try {
            if(txtLuong.getText().equals("")){
            JOptionPane.showMessageDialog(rootPane, "Lương nhân viên không được để rỗng");
            txtNgaysinh.requestFocus();
            check = false;
            return;
            }
            else{
                luong = Double.parseDouble(txtLuong.getText());                
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, "Kiểu dữ liệu không hợp lệ");
                txtLuong.setText("");
                txtLuong.requestFocus();
                check = false;
                return;
        }
        //kiểm tra lương trên 5tr
        try {
            if(luong<5000000){
                JOptionPane.showMessageDialog(rootPane, "lương phải trên 5tr nhé");
                txtLuong.setText("");
                txtLuong.requestFocus();
                check = false;
                return;
            }
        } catch (Exception e) {
        }
        //kiểm tra giới tính
        try {
            if(rdbNam.isSelected()==false && rdbNu.isSelected()==false){
            JOptionPane.showMessageDialog(rootPane, "Bạn chưa chọn giới tính");
            check = false;
            return;
            }
        } catch (Exception e) {
        }
        
//        if(txtMaNV.getText().equals("")){
//            JOptionPane.showMessageDialog(rootPane, "Mã nhân viên không được để rỗng");
//            txtMaNV.requestFocus();
//        }
//        else if(txtTenNV.getText().equals("")){
//            JOptionPane.showMessageDialog(rootPane, "Tên nhân viên không được để rỗng");
//            txtTenNV.requestFocus();
//        }
//        else if(txtNgaysinh.getText().equals("")){
//            JOptionPane.showMessageDialog(rootPane, "Ngày sinh nhân viên không được để rỗng");
//            txtNgaysinh.requestFocus();
//        }
//        else if(rdbNam.isSelected()==false && rdbNu.isSelected()==false){
//            JOptionPane.showMessageDialog(rootPane, "Bạn chưa chọn giới tính");
//            
//            if(rdbNam.isSelected()){
//                    NV.GioiTinh = true;
//            }
//            else{
//                    NV.GioiTinh =false;
//            }
//        }
//        else if(txtLuong.getText().equals("")){
//            JOptionPane.showMessageDialog(rootPane, "Lương nhân viên không được để rỗng");
//            txtNgaysinh.requestFocus();
//        }
//        else{
//            boolean check =true;
//            try {
//                double luong = Double.parseDouble(txtLuong.getText());
//            } catch (Exception e) {
//                JOptionPane.showMessageDialog(rootPane, "Kiểu dữ liệu không hợp lệ");
//                txtLuong.setText("");
//                txtLuong.requestFocus();
//                check = false;
//            }
//            for (int i = 0; i < list.size(); i++) {
//                  if(list.get(i).MaNV.equalsIgnoreCase(txtMaNV.getText())){
//                      JOptionPane.showMessageDialog(rootPane, "Mã nhân viên đã tồn tại");
//                      check = false;
//                      break;
//                  }
//            }
//            //nếu mọi điều kiện đã hợp lệ
//            if(check ==true){
//                addNhanVien();
//                filltoTable();
//            }
//        }
        if (check == true) {
        addNhanVien();
        filltoTable();
        }
    }//GEN-LAST:event_btnThemActionPerformed
    
    private void btnNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewActionPerformed
        // TODO add your handling code here:
        xoatrang();
    }//GEN-LAST:event_btnNewActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
        try {
            int row=jTable1.getSelectedRow();
            if(row>=0){
                int index = row;
                showDetail(index);
            }    
        } catch (Exception e) {
        }
    
    }//GEN-LAST:event_jTable1MouseClicked

    private void rdbNuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdbNuActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_rdbNuActionPerformed

    private void rdbNamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdbNamActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_rdbNamActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        // TODO add your handling code here:
        if(list.isEmpty()){
            JOptionPane.showMessageDialog(rootPane, "Không có gì để xóa");
            return;
        }
        else{
            int row = jTable1.getSelectedRow();
            list.remove(row);
            JOptionPane.showMessageDialog(rootPane, "Xóa thành công");
            xoatrang();
            filltoTable();
            
        }
        
    }//GEN-LAST:event_btnXoaActionPerformed

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        // TODO add your handling code here:
        int row = jTable1.getSelectedRow();
        //không cho sửa mã
        txtMaNV.disable();
        NV.TenNV = txtTenNV.getText();
        try {
            SimpleDateFormat dateFormat = new SimpleDateFormat();          
               NV.Ngaysinh = txtNgaysinh.getText().trim().toString();
               dateFormat.applyPattern("dd/MM/yyyy");
               Date date= dateFormat.parse(NV.Ngaysinh);
               dateFormat.format(date);
               filltoTable();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, "kiểu dữ liệu không hợp lệ");
            return;
        }
        
    }//GEN-LAST:event_btnSuaActionPerformed

    private void btnThoatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThoatActionPerformed
        // TODO add your handling code here:
        try {
            int kq =JOptionPane.showConfirmDialog(this,"Bạn có muốn thoát không?","Thoát",JOptionPane.YES_NO_OPTION);
            if(kq==0){
            System.exit(0);
            }
            else{
                JOptionPane.showMessageDialog(rootPane, "Cảm ơn!");
            }
        } catch (Exception e) {
        }       
    }//GEN-LAST:event_btnThoatActionPerformed

    private void btnTimkiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimkiemActionPerformed
        // TODO add your handling code here:
        showConfirmFind();
    }//GEN-LAST:event_btnTimkiemActionPerformed

    private void btnSapxepActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSapxepActionPerformed
        // TODO add your handling code here:
        Comparator<NhanVien> com = new Comparator<NhanVien>() {
            @Override
            public int compare(NhanVien o1, NhanVien o2) {
                Double d1 = o1.Hesoluong;
                Double d2 = o2.Hesoluong;
                return d2.compareTo(d1);
            }
        };
        Collections.sort(list, com);
        filltoTable();
    }//GEN-LAST:event_btnSapxepActionPerformed
    
    public void addNhanVien(){
        NV = new NhanVien();
        NV.setMaNV(txtMaNV.getText().trim());
        NV.setTenNV(txtTenNV.getText().toString());
        NV.setNgaysinh(txtNgaysinh.getText().toString());
        NV.setHesoluong(Double.parseDouble(txtLuong.getText().trim()));
        NV.setGioiTinh(rdbNam.isSelected());
        NV.setPhongBan(cbbPhongban.getSelectedItem().toString());
        
        list.add(NV);
        
    }
    
    public void filltoTable(){
        model = (DefaultTableModel)jTable1.getModel();
        model.setRowCount(0);
        for (NhanVien NV : list) {
            Object[] row = new Object[]{
              NV.getMaNV(),NV.getTenNV(),NV.getNgaysinh(),NV.getHesoluong(),NV.setGioiTinh(NV.GioiTinh),NV.getPhongBan()
            };
            model.addRow(row);
        }
    }
    
    public void showDetail(int index) {
        try {
            txtMaNV.disable();//mã nhân viên không được sửa
            NV = list.get(index);
            txtMaNV.setText(NV.MaNV);
            txtTenNV.setText(NV.TenNV);
            txtNgaysinh.setText(NV.Ngaysinh);
            txtLuong.setText(String.valueOf(NV.Hesoluong));
            if(NV.GioiTinh==true){
                rdbNam.setSelected(rootPaneCheckingEnabled);
            }
            else{
                rdbNu.setSelected(rootPaneCheckingEnabled);
            }
            
            
            cbbPhongban.setSelectedItem(NV.PhongBan);
        } catch (Exception e) {
        }
    }
    
    public void xoatrang(){
        txtMaNV.setText("");
        txtTenNV.setText("");
        txtNgaysinh.setText("");
        txtLuong.setText("");
        rdbNam.isSelected();
        cbbPhongban.setSelectedIndex(0);
        txtMaNV.enable();
    }
    
    public void showConfirmFind(){
        JComboBox<String> cbbTimkiem = new JComboBox<>();
        cbbTimkiem.removeAllItems();
        List<String> listFind = new ArrayList<String>();       
        listFind.add("Tìm kiếm theo mã");
        for (String b : listFind) {
            cbbTimkiem.addItem(b);
        }
        String s = (String) JOptionPane.showInputDialog(cbbTimkiem);
        for (NhanVien nv : list) {
            if(nv.getMaNV().equalsIgnoreCase(s)){
                JOptionPane.showMessageDialog(rootPane, "có nhân viên có mã là: "+s);
                index = list.indexOf(nv);
                showDetail(index);
                break;
            }
        }
    }
//    (null, "Lựa chọn kiểu tìm kiếm", "Tìm kiếm", JOptionPane.WARNING_MESSAGE, null, cbbTimkiem.getModel(), null);
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(QLNVForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(QLNVForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(QLNVForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(QLNVForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new QLNVForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnNew;
    private javax.swing.JButton btnSapxep;
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnThoat;
    private javax.swing.JButton btnTimkiem;
    private javax.swing.JButton btnXoa;
    private javax.swing.ButtonGroup buttonGroup1;
    private java.awt.Canvas canvas1;
    private javax.swing.JComboBox<String> cbbPhongban;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JRadioButton rdbNam;
    private javax.swing.JRadioButton rdbNu;
    private javax.swing.JTextField txtLuong;
    private javax.swing.JTextField txtMaNV;
    private javax.swing.JTextField txtNgaysinh;
    private javax.swing.JTextField txtTenNV;
    // End of variables declaration//GEN-END:variables
}
